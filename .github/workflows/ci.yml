name: Flutter CI Pipeline

on:
  push:
    branches: [ staging ]
  pull_request:
    branches: [ staging, main ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release'
        required: false
        default: false
        type: boolean
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: false
        type: string

jobs:
  format:
    name: Format Check
    uses: ./.github/workflows/job-format.yml
    with:
      flutter_version: '3.29.2'

  test:
    name: Run Tests (${{ matrix.os }})
    needs: format
    strategy:
      matrix:
        include:
          - os: macOS
            workflow: ./.github/workflows/job-test-macOS.yml
          - os: windows
            workflow: ./.github/workflows/job-test-windows.yml
    uses: ${{ matrix.workflow }}
    with:
      flutter_version: '3.29.2'

  build:
    name: Build ${{ matrix.platform }} App
    needs: [format, test]
    strategy:
      matrix:
        include:
          - platform: iOS
            workflow: ./.github/workflows/job-build-macOS.yml
          - platform: Android
            workflow: ./.github/workflows/job-build-windows.yml
    uses: ${{ matrix.workflow }}
    with:
      flutter_version: '3.29.2'
      build_number: ${{ github.run_number }}
    secrets: inherit

  release:
    name: Package and Release
    needs: [format, test, build]
    if: |
      success() && (
        inputs.create_release == true || 
        github.ref == 'refs/heads/main' || 
        github.ref == 'refs/heads/staging'
      )
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for changelog generation
      
      - name: Download iOS build
        uses: actions/download-artifact@v4
        with:
          name: unsigned-ipa
          path: artifacts/ios/ipa
      
      - name: Download iOS XCArchive
        uses: actions/download-artifact@v4
        with:
          name: xcarchive
          path: artifacts/ios/xcarchive
      
      - name: Download Android build
        uses: actions/download-artifact@v4
        with:
          name: release-apk
          path: artifacts/android/apk
      
      - name: Download Android App Bundle
        uses: actions/download-artifact@v4
        with:
          name: release-aab
          path: artifacts/android/aab
      
      - name: Set version
        id: set_version
        run: |
          if [ "${{ github.event.inputs.version }}" != "" ]; then
            echo "version=v${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            VERSION=$(grep 'version:' pubspec.yaml | sed 's/version: //')
            echo "version=v$VERSION" >> $GITHUB_OUTPUT
          fi
      
      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.6.2
        with:
          myToken: ${{ github.token }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ github.token }}
          tag_name: v${{ steps.set_version.outputs.version }}
          name: Release v${{ steps.set_version.outputs.version }}
          draft: false
          prerelease: ${{ github.ref != 'refs/heads/main' }}
          body: |
            ## What's Changed
            ${{ steps.changelog.outputs.changelog }}
          files: |
            artifacts/ios/ipa/*.ipa
            artifacts/android/apk/*.apk
            artifacts/android/aab/*.aab
      
      - name: Release status
        if: steps.create_release.outcome == 'success'
        run: echo "Release created successfully! ðŸš€"